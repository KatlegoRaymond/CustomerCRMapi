name: CI / CD – Build, Test, Docker, Push

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  #IMAGE_NAME: KatlegoRaymond/CustomerCRMapi
  IMAGE_NAME: ${{ github.repository }}   # ghcr.io/KatlegoRaymond/CustomerCRMapi
  JAVA_VERSION: '17'

jobs:
  build-test:
    runs-on: ubuntu-latest

    #Checks out your repository code so the runner can access it.
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    #Sets up the Java Development Kit (version 17, from Temurin distribution) needed to build your Java project.
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ env.JAVA_VERSION }}

    #Caches the Maven dependencies (~/.m2 folder) between runs for faster builds. 
    #Cache key is based on OS + hash of your pom.xml files (to invalidate cache when dependencies change).
    - name: Cache Maven
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven

    # Make Maven wrapper executable to avoid permission denied error
    - name: Make Maven wrapper executable
      run: chmod +x mvnw

    #Runs Maven wrapper to build your project and run tests (clean verify).
    - name: Build & Test
      run: mvn -B clean verify

  docker-push:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'   # only push image from main

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    #Allows pushing Docker images to GHCR under your user/repo.
    - name: Log in to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    #Builds a Docker image using the Dockerfile in the current directory. 
    #Pushes the image to GHCR
    - name: Build & push image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}